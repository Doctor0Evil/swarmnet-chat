;;; core/lisp.workflow.loop.controller.lisp
(defpackage :aln.bithub.orchestrator
  (:use :cl)
  (:export :run-bithub-command :compose-command-table))

(in-package :aln.bithub.orchestrator)

(defparameter *bithub-commands*
  '(
    ;; Admin/Workflow/VM Orchestration
    (".bit init-repo" "Create new bithub-native repo, .bit-hub ready")
    (".bit clone <repo>" "Clone any repo, github/bithub/vault, local or remote")
    (".bit push" "Push all tracked files, triggers multi-branch merges if needed")
    (".bit pull" "Pull and auto-sync from all connected remotes")
    (".bit merge <target>" "Automatic 3-way (or N-way) merge; preflights against policy")
    (".bit commit -m <msg>" "Commit with multi-layered ALN-context change-sets")
    (".bit status" "Status with workflowings, VM-layer and bithub token health")
    (".bit fetch --all" "Fetch from every allowed peer (bithub, github, vault)")
    (".bit branch new <name>" "Create new branch, trigger auto-provision in VM clusters")
    (".bit tag <tag>" "Tag in bithub/vault/governmental context")
    (".bit rebase <onto>" "Rebase multi-rooted trees; context-aware, self-heal on conflict")
    (".bit diff" "Smart diff — across all content, code, meta, vault secrets and OPA")
    (".bit stage <file>" "Stage file or policy, triggers pre-audit")
    (".bit unstash" "Recover work from any context-aware stash (by branch/context/time/user)")
    (".bit gc" "Garbage collect unreachable or expired persistent objects, with logs")
    (".bit log" "Unified log: code, events, policy, vault, moderation, context")
    (".bit bisect" "Debug/cut across violations, context or action-line errors")
    (".bit blame" "Full multi-layer author/audit, including bot/auto/VM actors")
    (".bit config --set <k>=<v>" "Set per-user or per-repo config, public/private/secret")
    (".bit remote add <src>" "Add remote (github, bithub, .bitvault, .gov)")
    ;; Token/Authentication/Security
    (".bit token create --role <x>" "Generate .bithub.token with ALN and full cross-auth")
    (".bit token sync" "Auto-sync tokens w/ github, .vault, gov, for all robots/actors")
    (".bit token audit" "Audit token usage, scope, expiry, breach attempts")
    (".bit policy audit" "OPA/compliance multi-policy audit, auto-trigger chain if fail")
    (".bit chmod <bits>" "Set smart policy/permissions at repo/file/branch/actor level")
    (".bit vault sync" "Two-way, bidirectional, checksum-auth content with .bitvault")
    (".bit gov audit" "Trigger governance scan, report gaps/compliance to .gov chains")
    ;; Bot/Automation/CI Orchestration/Workflow
    (".bit bot install <bot>" "Add, configure and validate BitBot using context-awareness")
    (".bit bot start <bot>" "Start bithub-bot, triggers OPA/ALN check and checks status")
    (".bit bot deploy <bot> [workflow]" "Deploy bot as agent into any workflow run")
    (".bit bot update" "Auto-patch and hotfix any/all BitBots systemwide")
    (".bit bot repair" "Auto-repair and rollback workflow, including nested runs")
    (".bit bot rollback <time/sha>" "Rollback across workflows, heal all damaged runs")
    (".bit action new <action>" "Create context-driven action, compliant with all layers")
    (".bit action link <existing>" "Link existing bot/run/action with auto-adapt if needed")
    (".bit action schedule" "Time/trigger-based, cross-zone, error-proof workflow runs")
    (".bit action secure" "Audit and enforce isolation/permissions on actions")
    (".bit workflow create [spec]" "Create or compose new workflows (YAML/ALN/bitpolicy)")
    (".bit workflow edit" "Smart, contextual edits, with OPA, ALN validation")
    (".bit workflow list" "Enumerate, show compliance & triggers, show meta in table")
    (".bit workflow health" "Full chain: preflight status, VM health, trigger dependency-checks")
    (".bit workflow checkpoint" "Auto-create checkpoint, hotpatch rollback w/o downtime")
    (".bit workflow migrate" "Move workflows across clusters/VMs/nodes, validate links live")
    (".bit workflow inject <YAML>" "Inject or patch logic/rule blocks live; self-heal if break")
    (".bit workflow snapshot" "Instant snapshot/backup: code, config, logs, state, checkpoint")
    (".bit workflow sandbox <scope>" "Test/verify in isolated env, including bots/context policy")
    (".bit workflow monitor" "Continuous monitor: errors, triggers, regressions, ALN alerts")
    ;; Repo/Networking/Cluster
    (".bit infra scan" "Scan infra/VMs/bots, preflight state, link health + graph")
    (".bit infra migrate" "Self-heal/migrate to healthy/cheaper/secure VM clusters")
    (".bit infra autoscale" "Smart/triggered autoscaling of bithub VMs/workflows on load")
    (".bit infra secure" "Checks for leaks, ports, open tokens, bad runners etc.")
    (".bit infra connect <target>" "Live connect, tunnel, or VPN/mesh any peer/cluster")
    (".bit infra firewall <rules>" "Smart, context-fencing, all clusters and bot-routes")
    (. ".bit infra seed" "Seed/propagate config/workflow/network key stores for cold boots")
    ;; Collaboration/Governance
    (".bit review create" "Create smart review/merge policies (incl. profanity/banter)")
    (".bit review approve" "Approve with full trace, context, and profanity policies")
    (".bit review enforce" "Lock, auto-escalate, and flag by policy chain (gov/ALN/bot)")
    (".bit user add <who>" "Instant add, cross-auth, validate policy, assign token")
    (".bit user disable <who>" "Disable any user or bot, quarantine context, rollback")
    (".bit user audit" "Show user act logs: admins, bots, actors, all time/context")
    (".bit notify <chan>" "Custom event, workflow run, or error alerts to any user/bot/cluster")
    (".bit docs sync" "Auto-sync .md, .aln, .yml docs across ALN, Github, Bithub, Vault")
    (".bit docs audit" "Full changelog, standards scan, compliance, profanity check in docs")
    (".bit docs verify" "Cross-verify doc/manifest OPA+compliance with latest rules")
    ;; Misc Advanced
    (".bit annotate [branch|commit]" "Smart tag/label, for forensics/chain trace/audit")
    (".bit trigger [event]" "Smart trigger any event (workflow, notification) by ALN context")
    (".bit recover <repo>/since=<time>" "Recover entire project/workflow branch after fatal events")
    (".bit hotfix" "On-the-fly patch, auto-propagates and re-verifies all linked bots/actions")
    (".bit banter.allow <word>" "Whitelist profanity/sarcasm for legal/allowed banter")
    (".bit revert-ban [branch|action]" "Instantly revert a ban/block, log all causes")
    (".bit unlock <feature>" "Unlock hidden/dev/beta features in VM, bot, or workflow logic")
    (".bit snapshot system" "Full system/infra/app/vault snapshot, ready for VM migrate or rollback")
    (".bit entangle [repo]" "Link/cross-wire multiple repos/workflows for meta-builds")
    (".bit adapt <source>" "Import, patch, and make policy-compliant from any context: gh/bh/bit")
    (".bit populate [type]" "Auto-fill repo: demo code/tests/templates, context-aware")
    (".bit vevo.render" "Trigger frame-level, in-VM rendering (video/audio/adaptive-gen)")
    (".bit enforce [rego]" "Enforce OPA/rego policy inline on all inbound/outbound ops")
    (".bit hotpatch [context]" "Patch/upgrade while live, no downtime")
    (".bit perf.check" "AI-driven performance scan, regression detection, trend alerts")
    (".bit limits.enforce" "Enforce upper/lower bounds on allowed workflows/tokens/users")
    (".bit link [repo/workflow]" "Hot-link other repos/workflows/VMs (live, traceable)")
    (".bit context.mutate" "Live-mutate or experiment sandboxed contexts, revert if breach")
    (".bit shield [feature]" "AI-guard: prevent escalation, bar-raise, improper context change")
    (".bit sync [scope]" "Sync all policies/tokens/actions/VMs, even for live games & services")
    (".bit telemetry" "Emit telemetry over ALN + standard, all workflow/bot events tracked")
    (".bit i18n" "Translate/adapt actions, errors & logs into all user locales")
    (".bit regen.schema" "Regenerate or update all ALN/module schemas VM-wide")
    (".bit trial [courtroom]" "Enact narrative or code ‘trial’ logic: generate banter/scene/logs")
    (".bit dice.roll" "Secure random scenario/event/merge resolution; show event in logs")
    (".bit act.out [scene]" "Run localized or global narrative/scene: auto-inject to repo/game/ci")
    (".bit stacktrace" "Live, full, cross-context stack trace across all bithub nodes/VMS/actions")
    (".bit compat.report" "Compare, show full diff, and merge with github, gitlab, vault, etc.")
    (".bit evolve" "ALN/AI-driven self-improvement: propagate new patterns, correct errors, sync docs")
    (".bit ban.list" "Show list of all banned/blocked words/events/actions, and update rule set")
    (".bit permissions.audit" "Run audit & enforce permissions, access-controls across all layers")
    (".bit unlock.future" "AI-experimental: unlock reserved for ALN-verified future-proof upgrades")
    ))

(defun compose-command-table ()
  (format t "~&| Command | Purpose |~%|---|---|~%")
  (dolist (cmd *bithub-commands*)
    (destructuring-bind (name purpose) cmd
      (format t "| ~A | ~A |~%" name purpose))))

;; Allows: (compose-command-table) for markdown table
